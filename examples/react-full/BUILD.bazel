# load(
#     "@ubiquitous_tech_rules_vite//vite:defs.bzl",
#     "copy_build",
#     "vite",
#     "vite_plugin_ssr_build",
#     "vite_plugin_ssr_dev",
# )

load(
    "@npm//@ubiquitoustech/rules_vite:index.bzl",
    "copy_build",
    "vite",
    "vite_plugin_ssr_build",
    "vite_plugin_ssr_dev",
)
load("@npm//history-server:index.bzl", "history_server")

# clean these up so they are just for the build
_DEPS = [
    "@npm//@mdx-js/mdx",
    "@npm//@mdx-js/react",
    "@npm//@types/express",
    "@npm//@types/node",
    "@npm//@types/node-fetch",
    "@npm//@types/react",
    "@npm//@types/react-dom",
    "@npm//@vitejs/plugin-react",
    "@npm//cross-fetch",
    "@npm//express",
    "@npm//node-fetch",
    "@npm//react",
    "@npm//react-dom",
    "@npm//rimraf",
    "@npm//serve",
    "@npm//ts-node",
    "@npm//typescript",
    "@npm//vite",
    "@npm//vite-plugin-mdx",
    "@npm//vite-plugin-ssr",
]

vite(
    name = "client",
    srcs = glob([
        "components/**",
        "pages/**",
        "renderer/**",
    ]) + [
        ":package.json",
        ":yarn.lock",
        ":tsconfig.json",
    ],
    config = ":vite.config.ts",
    ssrtype = "client",
    deps = _DEPS,
)

vite(
    name = "server",
    srcs = glob([
        "components/**",
        "pages/**",
        "renderer/**",
    ]) + [
        ":package.json",
        ":yarn.lock",
        ":tsconfig.json",
    ],
    args = ["--ssr"],
    config = ":vite.config.ts",
    ssrtype = "server",
    deps = _DEPS,
)

vite_plugin_ssr_build(
    name = "client2",
    client_build = ":client",
    server_build = ":server",
    ssrtype = "client",
    deps = _DEPS + [
        ":client",
        ":server",
    ],
)

copy_build(
    name = "final",
    client_build = [
        ":client",
        ":client2",
    ],
    server_build = ":server",
    deps = [
        ":client",
        ":client2",
        ":server",
        "@npm//copyfiles",
    ],
)

PROD_BUNDLE = ":final"

history_server(
    name = "prodserver",
    data = [PROD_BUNDLE],
    templated_args = ["-a $$(rlocation $(rootpath %s))/client" % PROD_BUNDLE],
)

vite_plugin_ssr_dev(
    name = "dev",
    srcs = glob([
        "components/**",
        "pages/**",
        "renderer/**",
        "server/**",
    ]) + [
        ":package.json",
        ":yarn.lock",
        ":tsconfig.json",
        ":vite.config.ts",
    ],
    command = "server/index.ts",
    npm_managed_directory_name = "npm",
    npm_managed_directory_path = "node_modules",
    # dir = "prod",
    # ssrtype = "client",
    # config = ":vite.config.ts",
    deps = _DEPS,
)

# attempt to use bazel rules to move folders currently don't work
# filter_directory(
#     name = "client_files",
#     src = ":client",
#     # Where it should be in the final package
#     prefix = "client",
#     # Required, but why?: see #354
#     strip_prefix = strip_prefix.from_pkg(),
# )

# filter_directory(
#     name = "server_files",
#     src = ":server",
#     # Where it should be in the final package
#     prefix = "server",
#     # Required, but why?: see #354
#     strip_prefix = strip_prefix.from_pkg(),
# )

# filter_directory(
#     name = "client2_files",
#     src = ":client2",
#     # Where it should be in the final package
#     prefix = "client",
#     # Required, but why?: see #354
#     strip_prefix = strip_prefix.from_pkg(),
# )

# pkg_zip(
#     name = "foo_zip",
#     srcs = [
#         # "README.txt",
#         # ":manpages",
#         # ":share_doc",
#         ":client_files",
#         ":server_files",
#         ":client2_files",
#     ],
# )
